// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/files.proto

package archivist

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Integrity are hashes of byte content.
type Integrity struct {
	Sha512               []byte   `protobuf:"bytes,1,opt,name=sha512,proto3" json:"sha512,omitempty"`
	Blake2B512           []byte   `protobuf:"bytes,2,opt,name=blake2b512,proto3" json:"blake2b512,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Integrity) Reset()         { *m = Integrity{} }
func (m *Integrity) String() string { return proto.CompactTextString(m) }
func (*Integrity) ProtoMessage()    {}
func (*Integrity) Descriptor() ([]byte, []int) {
	return fileDescriptor_132a9b3180f1f907, []int{0}
}

func (m *Integrity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Integrity.Unmarshal(m, b)
}
func (m *Integrity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Integrity.Marshal(b, m, deterministic)
}
func (m *Integrity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Integrity.Merge(m, src)
}
func (m *Integrity) XXX_Size() int {
	return xxx_messageInfo_Integrity.Size(m)
}
func (m *Integrity) XXX_DiscardUnknown() {
	xxx_messageInfo_Integrity.DiscardUnknown(m)
}

var xxx_messageInfo_Integrity proto.InternalMessageInfo

func (m *Integrity) GetSha512() []byte {
	if m != nil {
		return m.Sha512
	}
	return nil
}

func (m *Integrity) GetBlake2B512() []byte {
	if m != nil {
		return m.Blake2B512
	}
	return nil
}

// Blob is an archived collection of bytes.
type Blob struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Size                 uint64     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Integrity            *Integrity `protobuf:"bytes,3,opt,name=integrity,proto3" json:"integrity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_132a9b3180f1f907, []int{1}
}

func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (m *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(m, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

func (m *Blob) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Blob) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Blob) GetIntegrity() *Integrity {
	if m != nil {
		return m.Integrity
	}
	return nil
}

func init() {
	proto.RegisterType((*Integrity)(nil), "archivist.v1.Integrity")
	proto.RegisterType((*Blob)(nil), "archivist.v1.Blob")
}

func init() { proto.RegisterFile("proto/files.proto", fileDescriptor_132a9b3180f1f907) }

var fileDescriptor_132a9b3180f1f907 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xcb, 0xcc, 0x49, 0x2d, 0xd6, 0x03, 0xb3, 0x85, 0x78, 0x12, 0x8b, 0x92, 0x33,
	0x32, 0xcb, 0x32, 0x8b, 0x4b, 0xf4, 0xca, 0x0c, 0x95, 0x9c, 0xb9, 0x38, 0x3d, 0xf3, 0x4a, 0x52,
	0xd3, 0x8b, 0x32, 0x4b, 0x2a, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0x33, 0x12, 0x4d, 0x0d, 0x8d, 0x24,
	0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0xa0, 0x3c, 0x21, 0x39, 0x2e, 0xae, 0xa4, 0x9c, 0xc4, 0xec,
	0x54, 0xa3, 0x24, 0x90, 0x1c, 0x13, 0x58, 0x0e, 0x49, 0x44, 0x29, 0x91, 0x8b, 0xc5, 0x29, 0x27,
	0x3f, 0x49, 0x88, 0x8f, 0x8b, 0x29, 0x33, 0x05, 0xac, 0x97, 0x33, 0x88, 0x29, 0x33, 0x45, 0x48,
	0x88, 0x8b, 0xa5, 0x38, 0xb3, 0x2a, 0x15, 0xac, 0x83, 0x25, 0x08, 0xcc, 0x16, 0x32, 0xe5, 0xe2,
	0xcc, 0x84, 0x59, 0x28, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xae, 0x87, 0xec, 0x24, 0x3d,
	0xb8, 0x7b, 0x82, 0x10, 0x2a, 0x9d, 0x14, 0xa3, 0xe4, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4,
	0x92, 0xf3, 0x73, 0xf5, 0x4b, 0x32, 0x52, 0x0b, 0xca, 0x13, 0xd3, 0xf3, 0x52, 0x8b, 0xf4, 0xe1,
	0x5a, 0x93, 0xd8, 0xc0, 0xfe, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xc0, 0x1d, 0x4a,
	0xf4, 0x00, 0x00, 0x00,
}
